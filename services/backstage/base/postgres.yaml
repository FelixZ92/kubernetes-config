---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: backstage-postgres-tls
  labels:
    app.kubernetes.io/name: backstage
spec:
  secretName: backstage-postgres-tls
  issuerRef:
    name: selfsigned-ca-issuer
    kind: ClusterIssuer
  dnsNames:
    - infra-backstage-pg
    - infra-backstage-pg.backstage
    - infra-backstage-pg.backstage.svc
    - infra-backstage-pg.backstage.svc.cluster.local
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: infra-backstage-pg
  labels:
    app.kubernetes.io/name: spilo
    app.kubernetes.io/instance: infra-backstage-pg
    team: infra
spec:
  enableLogicalBackup: true
  teamId: "infra"
  volume:
    size: 2Gi
  numberOfInstances: 1
  resources:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200M
  postgresql:
    version: "12"

  tls:
    secretName: backstage-postgres-tls

# TODO: update with new pg operator version
  spiloRunAsUser: 101
  spiloRunAsGroup: 103
  spiloFSGroup: 103

  sidecars:
    - name: "exporter"
      image: "quay.io/prometheuscommunity/postgres-exporter:v0.11.1"
      securityContext:
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: false
        runAsGroup: 65532
#        runAsNonRoot: true
        runAsUser: 65532
      ports:
        - name: exporter
          containerPort: 9187
          protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256M
        requests:
          cpu: 100m
          memory: 200M
      env:
        - name: "DATA_SOURCE_URI"
          value: "localhost/postgres?sslmode=disable"
        - name: "DATA_SOURCE_USER"
          valueFrom:
            secretKeyRef:
              name: postgres.infra-backstage-pg.credentials.postgresql.acid.zalan.do
              key: username
        - name: "DATA_SOURCE_PASS"
          valueFrom:
            secretKeyRef:
              name: postgres.infra-backstage-pg.credentials.postgresql.acid.zalan.do
              key: password

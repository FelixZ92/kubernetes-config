apiVersion: v1
kind: ConfigMap
metadata:
  name: realm-config
data:
  definition.json: |
    {
      "id": "applications",
      "realm": "applications",
      "enabled": true,
      "revokeRefreshToken": true,
      "refreshTokenMaxReuse": 3,
      "ssoSessionIdleTimeoutRememberMe": 1800,
      "ssoSessionMaxLifespanRememberMe": 1800,
      "verifyEmail": true,
      "bruteForceProtected": true,
      "permanentLockout": true,
      "failureFactor": 5,
      "eventsListeners": [
        "metrics-listener",
        "jboss-logging"
      ],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "keycloakVersion": "11.0.2",
      "userManagedAccessAllowed": false
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-client-scope
data:
  k8s.json: |
    {
      "name": "k8s",
      "description": "k8s",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "k8s-audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "k8s",
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "k8s",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "k8s",
            "usermodel.clientRoleMapping.clientId": "k8s"
          }
        }
      ]
    }

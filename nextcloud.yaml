image:
  repository: nextcloud
  tag: stable-fpm-alpine

lifecycle: { }
# postStartCommand: []
# preStopCommand: []

nextcloud:
  host: nextcloud.${BASE_DOMAIN}
  ## Use an existing secret
  existingSecret:
    enabled: true
    secretName: nextcloud-admin-user
    usernameKey: username
    passwordKey: password
  #     smtpUsernameKey: smtp_username
  #     smtpPasswordKey: smtp_password
  mail:
    enabled: false
    fromAddress: user
    domain: domain.com
    smtp:
      host: domain.com
      secure: ssl
      port: 465
      authtype: LOGIN
      name: user
      password: pass

  configs:
    objectstorage.config.php: |-
      <?php
      $CONFIG = array (
        'objectstore'   => array(
          'class'       => '\\OC\\Files\\ObjectStore\\Swift',
          'arguments'   => array(
            'bucket'      => 'test',
            'autocreate'  => false,
            'url'         => getenv('S3_ENDPOINT'),
            'user' => [
                    'name' => getenv('S3_ACCESS_KEY'),
                    'password' => getenv('S3_SECRET_KEY'),
                    'domain' => [
                            'name' => 'Default',
                    ],
            ],
            'scope' => [
                    'project' => [
                            'name' => getenv('OS_TENANT_NAME'),
                            'domain' => [
                                    'name' => 'Default',
                            ],
                    ],
            ],
            'serviceName' => 'swift',
            'region'      => getenv('S3_REGION'),
          )
        )
      );

  extraEnv:
    - name: S3_ENDPOINT
      value: https://auth.cloud.ovh.net/v3
    - name: S3_PORT
      value: "9000"
    - name: S3_REGION
      value: DE
    - name: S3_USE_SSL
      value: "false"
    - name: OS_TENANT_NAME
      valueFrom:
        secretKeyRef:
          name: nextcloud-os-tenant
          key: tenant
    - name: S3_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: nextcloud-objectstore-credentials
          key: accesskey
    - name: S3_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: nextcloud-objectstore-credentials
          key: secretkey

nginx:
  enabled: true
  image:
    repository: nginx
    tag: alpine
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi

internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  type: postgresql
  host: nextcloud-pg
  database: postgres
  existingSecret:
    enabled: false
    secretName: nextcloud-user.nextcloud-pg.credentials.postgresql.acid.zalan.do
    usernameKey: username
    passwordKey: password

redis:
  enabled: false
  usePassword: true
  password: 'changeme'

## Cronjob to execute Nextcloud background tasks
## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#webcron
##
cronjob:
  enabled: true
  image:
    repository: curlimages/curl
    tag: 7.76.1
  curlInsecure: true
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 2
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  annotations: { }
  storageClass: "local-path"
  accessMode: ReadWriteOnce
  size: 8Gi

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

## Prometheus Exporter / Metrics
##
metrics:
  enabled: true

  replicaCount: 1
  # The metrics exporter needs to know how you serve Nextcloud either http or https
  https: true
  timeout: 5s

  image:
    repository: xperimental/nextcloud-exporter
    tag: v0.3.0

  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

replicas: 1

# Additional init containers, e. g. for providing custom themes
extraInitContainers: |
  - env:
    - name: KEYCLOAK_EXTENSIONS
      value: https://github.com/aerogear/keycloak-metrics-spi/releases/download/2.5.3/keycloak-metrics-spi-2.5.3.jar
    image: quay.io/keycloak/keycloak-init-container:master
    imagePullPolicy: Always
    name: extensions-init
    volumeMounts:
    - mountPath: /opt/extensions
      name: keycloak-extensions
    resources:
      requests:
        cpu: 50m
        memory: 256Mi
      limits:
        cpu: 50m
        memory: 256Mi

# Additional environment variables for Keycloak
extraEnv: |
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"
  - name: DB_VENDOR
    value: postgres
  - name: DB_ADDR
    value: identity-pg-clone
  - name: DB_PORT
    value: "5432"
  - name: DB_DATABASE
    value: postgres
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        key: username
        name: "keycloak-user.identity-pg.credentials.postgresql.acid.zalan.do"
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: "keycloak-user.identity-pg.credentials.postgresql.acid.zalan.do"
  - name: KEYCLOAK_USER
    valueFrom:
      secretKeyRef:
        key: username
        name: "keycloak-admin-user"
  - name: KEYCLOAK_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: "keycloak-admin-user"
  - name: KEYCLOAK_STATISTICS
    value: all
# - name: KEYCLOAK_LOGLEVEL
#   value: DEBUG
# - name: WILDFLY_LOGLEVEL
#   value: DEBUG
# - name: CACHE_OWNERS_COUNT
#   value: "2"
# - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
#   value: "2"

# Pod resource requests and limits
resources:
  requests:
    cpu: "500m"
    memory: "1024Mi"
  limits:
    cpu: "500m"
    memory: "1024Mi"

# Add additional volumes, e. g. for custom themes
extraVolumes: |
  - emptyDir: {}
    name: keycloak-extensions

# Add additional volumes mounts, e. g. for custom themes
extraVolumeMounts: |
  - mountPath: /opt/jboss/keycloak/providers
    name: keycloak-extensions

postgresql:
  enabled: false

serviceMonitor:
  enabled: true

prometheusRule:
  enabled: true
  rules:
    - alert: KeycloakJavaHeapThresholdExceeded
      annotations:
        message: '{{ printf "%0.0f" $value }}% heap usage of {{ $labels.area }} in
            pod {{$labels.pod }}, namespace {{ $labels.namespace }}.'
      expr: |
        100 * jvm_memory_bytes_used{area="heap",namespace="keycloak"} / jvm_memory_bytes_max{area="heap",namespace="keycloak"} > 90
      for: 1m
      labels:
        severity: warning
    - alert: KeycloakJavaNonHeapThresholdExceeded
      annotations:
        message: '{{ printf "%0.0f" $value }}% nonheap usage of {{ $labels.area }}
            in pod {{ $labels.pod }}, namespace {{ $labels.namespace }}.'
      expr: |
        100 * jvm_memory_bytes_used{area="nonheap",namespace="keycloak"} / jvm_memory_bytes_max{area="nonheap",namespace="keycloak"} > 90
      for: 1m
      labels:
        severity: warning
    - alert: KeycloakJavaGCTimePerMinuteScavenge
      annotations:
        message: Amount of time per minute spent on garbage collection of {{ $labels.area
          }} in pod {{ $labels.pod }}, namespace {{ $labels.namespace }} exceeds 90%.
          This could indicate that the available heap memory is insufficient.
      expr: |
        increase(jvm_gc_collection_seconds_sum{gc="PS Scavenge",namespace="keycloak"}[1m]) > 1 * 60 * 0.9
      for: 1m
      labels:
        severity: warning
    - alert: KeycloakJavaGCTimePerMinuteMarkSweep
      annotations:
        message: Amount of time per minute spent on garbage collection of {{ $labels.area
          }} in pod {{ $labels.pod }}, namespace {{ $labels.namespace }} exceeds 90%.
          This could indicate that the available heap memory is insufficient.
      expr: |
        increase(jvm_gc_collection_seconds_sum{gc="PS MarkSweep",namespace="keycloak"}[1m]) > 1 * 60 * 0.9
      for: 1m
      labels:
        severity: warning
    - alert: KeycloakJavaDeadlockedThreads
      annotations:
        message: Number of threads in deadlock state of {{ $labels.area }} in pod
          {{ $labels.pod }}, namespace {{ $labels.namespace }}
      expr: |
        jvm_threads_deadlocked{namespace="keycloak"} > 0
      for: 1m
      labels:
        severity: warning
    - alert: KeycloakLoginFailedThresholdExceeded
      annotations:
        message: More than 50 failed login attempts for realm {{ $labels.realm }},
          provider {{ $labels.provider }}, namespace {{ $labels.namespace }} over
          the last 5 minutes. (Rate of {{ printf "%0f" $value }})
      expr: rate(keycloak_failed_login_attempts{namespace="keycloak"}[5m]) * 300 >
        50
      for: 5m
      labels:
        severity: warning
    - alert: KeycloakInstanceNotAvailable
      annotations:
        message: Keycloak instance in namespace {{ $labels.namespace }} has not been
          available for the last 5 minutes.
      expr: |
        (1 - absent(kube_pod_status_ready{namespace="keycloak", condition="true"}
        * on (pod) group_left (label_app_kubernetes_io_instance) kube_pod_labels{label_app_kubernetes_io_instance="keycloak",
        namespace="keycloak"})) == 0
      for: 5m
      labels:
        severity: critical
    - alert: KeycloakAPIRequestDuration90PercThresholdExceeded
      annotations:
        message: More than 10% the RH SSO API endpoints in namespace {{ $labels.namespace
          }} are taking longer than 1s for the last 5 minutes.
      expr: |
        (sum(rate(keycloak_request_duration_bucket{le="1000.0", namespace="keycloak"}[5m]))
        by (job) / sum(rate(keycloak_request_duration_count{namespace="keycloak"}[5m]))
        by (job)) < 0.90
      for: 5m
      labels:
        severity: warning
    - alert: KeycloakAPIRequestDuration99.5PercThresholdExceeded
      annotations:
        message: More than 0.5% of the RH SSO API endpoints in namespace {{ $labels.namespace
          }} are taking longer than 10s for the last 5 minutes.
      expr: |
        (sum(rate(keycloak_request_duration_bucket{le="10000.0", namespace="keycloak"}[5m]))
        by (job) / sum(rate(keycloak_request_duration_count{namespace="keycloak"}[5m]))
        by (job) / sum(rate(keycloak_request_duration_count{namespace="keycloak"}[5m]))
        by (job)) < 0.995
      for: 5m
      labels:
        severity: warning
    - alert: KeycloakDatabaseNotAvailable
      annotations:
        message: RH SSO database in namespace {{ $labels.namespace }} is not available
          for the last 5 minutes.
      expr: |
        (1 - absent(kube_pod_status_ready{namespace="keycloak", condition="true"}
        * on (pod) group_left (team) kube_pod_labels{team="identity",
        namespace="keycloak"})) == 0
      for: 5m
      labels:
        severity: critical
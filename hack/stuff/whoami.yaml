apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
  labels:
    app: whoami
spec:
  replicas: 1
  template:
    metadata:
      name: whoami
      labels:
        app: whoami
    spec:
      containers:
        - name: gatekeeper
          image: quay.io/gatekeeper/gatekeeper
          imagePullPolicy: Always
          args:
            - --client-id=k8s
            - --client-secret=48bdf60e-cd68-4b2f-9873-3dae7c889a86
            - --discovery-url=https://keycloak.host.k3d.internal/auth/realms/k8s
            - --skip-openid-provider-tls-verify=true
            - --enable-default-deny=false
            - --encryption-key=AgXa7xRcoClDEU0ZDSH4X0XhL5Qy2Z2j
            - --listen=:3000
#            - --preserve-host=true
            - --redirection-url=https://whoami.host.k3d.internal
            - --resources=uri=/*
            - --upstream-url=http://localhost:80
#            - --scopes=nickname
          ports:
            - containerPort: 3000
              name: proxy
              protocol: TCP

        - name: whoami
          image: containous/whoami
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: web
              protocol: TCP
      restartPolicy: Always
  selector:
    matchLabels:
      app: whoami
---
apiVersion: v1
kind: Service
metadata:
  name: whoami
spec:
  selector:
    app: whoami
  ports:
    - port: 3000
      name: proxy
      protocol: TCP
      targetPort: proxy
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: whoami
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`whoami.host.k3d.internal`)
      kind: Rule
      services:
        - name: whoami
          port: 3000
      middlewares:
        - name: redirect-https
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: whoami-tls
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`whoami.host.k3d.internal`)
      kind: Rule
      services:
        - name: whoami
          port: 3000
#      middlewares:
#        - name: forward-auth-bouncer-admin
  tls:
    secretName: tls-infra-ingress
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: whoami-tls-certificate
spec:
  secretName: tls-whoami-ingress
  issuerRef:
    name: ca-clusterissuer
    kind: ClusterIssuer
  dnsNames:
    - whoami.host.k3d.internal

apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-client-config
data:
  definition.json: |
    {
      "clientId": "k8s",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
          "https://alertmanager.127.0.0.1.xip.io/oauth/callback",
          "https://argocd.127.0.0.1.xip.io/auth/callback",
          "https://dashboard.127.0.0.1.xip.io/oauth/callback",
          "https://grafana.127.0.0.1.xip.io/login/generic_oauth",
          "https://longhorn.127.0.0.1.xip.io/oauth/callback",
          "https://postgres.127.0.0.1.xip.io/oauth/callback",
          "https://prometheus.127.0.0.1.xip.io/oauth/callback",
          "https://traefik.127.0.0.1.xip.io/oauth/callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "k8s",
          "email",
          "microprofile-jwt",
          "profile"
      ],
      "optionalClientScopes": [
          "address",
          "phone",
          "offline_access"
      ]
    }
  roles: |
    cluster-admin
    cluster-readonly
